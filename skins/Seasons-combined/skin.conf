###############################################################################
# SEASONS SKIN CONFIGURATION FILE                                             #
# Copyright (c) 2018-2021 Tom Keffer <tkeffer@gmail.com> and Matthew Wall     #
# See the file LICENSE.txt for your rights.                                   #
###############################################################################

SKIN_NAME = Seasons-wmr300+eW
SKIN_VERSION = 5.0.1

###############################################################################

# The following section is for any extra tags that you want to be available in
# the templates

[Extras]


    # Similar to radar, but for satellite image.
    #satellite_img = http://images.intellicast.com/WxImages/SatelliteLoop/hipacsat_None_anim.gif
    #satellite_url = http://images.intellicast.com/WxImages/SatelliteLoop/hipacsat_None_anim.gif

    # To display a map, enter an API key for google maps
    #google_maps_apikey = xxx

    # If you have a Google Analytics GA4 tag, uncomment and edit the next line, and
    # the analytics code will be included in your generated HTML files:
    #googleAnalyticsId = G-ABCDEFGHI


###############################################################################

# The following section contains variables that determine which observations
# and plots will be shown in the template files, and their order.  Like other
# configuration options, these can be overridden in the weewx config file.

[DisplayOptions]

    # Show link to RSS feed?
    show_rss = False

    # Show link to NOAA-style summary reports?
    show_reports = True

    # This list determines which types will appear in the "current conditions"
    # section, as well as in which order.
    # NOTE - the Ecowitt ones cannot be addressed here, only values from wx_bindings. Others get hard-coded in the .inc files.
    observations_current = outTemp, dewpoint, outHumidity, barometer, windSpeed, rain, rainRate, inHumidity

    # This list determines which types will appear in the "statistics" and
    # "statistical summary" sections, as well as in which order.
    observations_stats = outTemp, dewpoint, outHumidity, barometer, windSpeed, rain, rainRate, inTemp, inHumidity

    # This list determines which types will appear in the RSS feed.
    observations_rss = outTemp, inTemp, barometer, windSpeed, rain, rainRate, dewpoint, outHumidity,  inHumidity

    # Some observations display a sum rather than min/max values
    obs_type_sum = rain

    # Some observations display only the max value
    obs_type_max = rainRate

    # The sensor status information is used in the sensor pages.  These lists
    # determine which database fields will be shown, as well as the order in
    # which they will be displayed.
    sensor_connections = ,
    sensor_batteries = ,
    sensor_voltages = ,

    # This list determines which plots will be shown, as well as the order in
    # which they will be displayed.  The names refer to the plots defined in
    # the ImageGenerator section, without any time span prefix.  For example,
    # the name 'wind' refers to 'daywind', 'weekwind', 'monthwind', and
    # 'yearwind'.
    plot_groups = tempdew, hilow, pm, pmmin, co2, co2min, rain, rainshort, wind, winddir, windvec, barometer, hum, minhum, maxhum,  mem, maxupdown, minupdown
    telemetry_plot_groups = ,

    # The list of time spans used within the skin
    periods = day, week, month, year


###############################################################################

# The CheetahGenerator creates files from templates.  This section
# specifies which files will be generated from which template.

[CheetahGenerator]

    # Possible encodings include 'html_entities', 'strict_ascii', 'normalized_ascii',
    # as well as those listed in https://docs.python.org/3/library/codecs.html#standard-encodings
    encoding = html_entities

    [[SummaryByMonth]]
        # Reports that summarize "by month"
        [[[NOAA_month]]]
            encoding = normalized_ascii
            template = NOAA/NOAA-%Y-%m.txt.tmpl

    [[SummaryByYear]]
        # Reports that summarize "by year"
        [[[NOAA_year]]]
            encoding = normalized_ascii
            template = NOAA/NOAA-%Y.txt.tmpl
        
    [[ToDate]]
        # Reports that show statistics "to date", such as day-to-date,
        # week-to-date, month-to-date, etc.
        [[[index]]]
            template = index.html.tmpl
        [[[statistics]]]
            template = statistics.html.tmpl
        [[[telemetry]]]
            template = telemetry.html.tmpl
        [[[tabular]]]
            template = tabular.html.tmpl
        [[[celestial]]]
            template = celestial.html.tmpl
            # Uncomment the following to generate a celestial page only once
            # an hour instead of every report cycle.
            stale_age = 3600
        #[[[RSS]]]
        #    template = rss.xml.tmpl
            
###############################################################################

# The CopyGenerator copies files from one location to another.

[CopyGenerator]

    # List of files to be copied only the first time the generator runs
    copy_once = seasons.css, seasons.js, favicon.ico, font/*.woff, font/*.woff2

    # List of files to be copied each time the generator runs
    # copy_always = 
        

###############################################################################

# The ImageGenerator creates image plots of data.

[ImageGenerator]

    # This section lists all the images to be generated, what SQL types are to be included in them,
    # along with many plotting options. There is a default for almost everything. Nevertheless,
    # values for most options are included to make it easy to see and understand the options.
    #
    # Nearly all types in the wview-extended schema are included. However, because of the
    # 'skip_if_empty' option, only the plots with non-null data will be actually produced.
    #
    # Fonts can be anything accepted by the Python Imaging Library (PIL), which includes truetype
    # (.ttf), or PIL's own font format (.pil). Note that "font size" is only used with truetype
    # (.ttf) fonts. For others, font size is determined by the bit-mapped size, usually encoded in
    # the file name (e.g., courB010.pil). A relative path for a font is relative to the SKIN_ROOT.
    # If a font cannot be found, then a default font will be used.
    #
    # Colors can be specified any of three ways:
    #   1. Notation 0xBBGGRR;
    #   2. Notation "#RRGGBB"; or
    #   3. Using an English name, such as 'yellow', or 'blue'.
    # So, 0xff0000, "#0000ff", or 'blue' would all specify a pure blue color.
    
    image_width = 500
    image_height = 320
    image_background_color = "#ffffff"
    
    chart_background_color = "#ffffff"
    chart_gridline_color = "#d0d0d0"

    # Setting to 2 or more might give a sharper image with fewer jagged edges
    anti_alias = 1

    top_label_font_path = font/OpenSans-Bold.ttf
    top_label_font_size = 14

    unit_label_font_path = font/OpenSans-Bold.ttf
    unit_label_font_size = 12
    unit_label_font_color = "#787878"

    bottom_label_font_path = font/OpenSans-Regular.ttf
    bottom_label_font_size = 12
    bottom_label_font_color = "#787878"
    bottom_label_offset = 3

    axis_label_font_path = font/OpenSans-Regular.ttf
    axis_label_font_size = 10
    axis_label_font_color = "#787878"
    
    # Options for the compass rose, used for progressive vector plots
    rose_label = N
    rose_label_font_path = font/OpenSans-Regular.ttf
    rose_label_font_size  = 9
    rose_label_font_color = "#222222"

    # Default colors for the plot lines. These can be overridden for
    # individual lines using option 'color'.
    chart_line_colors = "#4282b4", "#b44242", "#42b442", "#42b4b4", "#b442b4"
    
    # Default fill colors for bar charts. These can be overridden for
    # individual bar plots using option 'fill_color'.
    chart_fill_colors = "#72b2c4", "#c47272", "#72c472", "#72c4c4", "#c472c4"
    
    # Type of line. Options are 'solid' or 'none'.
    line_type = 'solid'

    # Size of marker in pixels
    marker_size = 8
    # Type of marker. Options are 'cross', 'x', 'circle', 'box', or 'none'.
    marker_type ='none'
        
    # The following option merits an explanation. The y-axis scale used for
    # plotting can be controlled using option 'yscale'. It is a 3-way tuple,
    # with values (ylow, yhigh, min_interval). If set to "None", a parameter is
    # set automatically, otherwise the value is used. However, in the case of
    # min_interval, what is set is the *minimum* y-axis tick interval.
    yscale = None, None, None

    # For progressive vector plots, you can choose to rotate the vectors.
    # Positive is clockwise.
    # For my area, westerlies overwhelmingly predominate, so by rotating
    # positive 90 degrees, the average vector will point straight up.
    vector_rotate = 0

    # This defines what fraction of the difference between maximum and minimum
    # horizontal chart bounds is considered a gap in the samples and should not
    # be plotted.
    line_gap_fraction = 0.01

    # This controls whether day/night bands will be shown. They only look good
    # on plots wide enough to show individual days such as day and week plots.
    show_daynight = true
    # These control the appearance of the bands if they are shown.
    # Here's a monochrome scheme:
    daynight_day_color   = "#fdfaff"
    daynight_night_color = "#dfdfe2"
    daynight_edge_color  = "#e0d8d8"
    # Here's an alternative, using a blue/yellow tint:
    #daynight_day_color   = "#fffff8"
    #daynight_night_color = "#f8f8ff"
    #daynight_edge_color  = "#fff8f8"

    # Default will be a line plot of width 1, without aggregation.
    # Can get overridden at any level.
    plot_type = line
    width = 1
    aggregate_type = none

    # Do not generate a plot if it does not have any non-null data:
    skip_if_empty = year

    # What follows is a list of subsections, each specifying a time span, such as a day, week,
    # month, or year. There's nothing special about them or their names: it's just a convenient way
    # to group plots with a time span in common. You could add a time span [[biweek_images]] and
    # add the appropriate time length, aggregation strategy, etc., without changing any code.
    #
    # Within each time span, each sub-subsection is the name of a plot to be generated for that
    # time span. The generated plot will be stored using that name, in whatever directory was
    # specified by option 'HTML_ROOT' in weewx.conf.
    #
    # With one final nesting (four brackets!) is the sql type of each line to be included within
    # that plot.
    #
    # Unless overridden, leaf nodes inherit options from their parent.

    [[day_images]]
        x_label_format = %H:%M
        bottom_label_format = %x %X
        time_length = 27h
        
        [[[daybarometer]]]
            [[[[barometer]]]]
                color = "red"
            [[[[altimeter]]]]
                color = "green"
                data_binding = "ecowitt_binding"
                label = "EW altim"
                data_type = altimeter
                aggregate_type = avg
                aggregate_interval = 600
        
        [[[daytempdew]]]
	        top_label_font_size = 10
            [[[[outTemp]]]]
                color = "red"
                label = "Out T"
            [[[[dewpoint]]]]
                color = "blue"
                label = "Out. Dew"
            #[[[[inTemp]]]]
                # remove this because it has too much self-heating
                #color = 0x3080ff
                #label = "In T"
            [[[[inDewpoint]]]]
                color = 0xff9090
                label = "In. Dew Pt"
            [[[[inTempEW]]]]
                color = 0x2070d0
                data_type = inTemp_gw
                data_binding = "ecowitt_binding"
                label = "T (study)"
            [[[[inTempEW31a]]]]
                color = "green"
                data_type = inTemp_wh31_1
                data_binding = "ecowitt_binding"
                label = "T (downstairs)"
            [[[[inTempEW45]]]]
                color = "purple"
                data_type = inTemp_wh45
                data_binding = "ecowitt_binding"
                label = "T(WH45)"

        
      
        [[[dayhum]]]
            top_label_font_size = 10
            [[[[outHumidity]]]]
                color = "blue"
                label = "Humidity: outside"
            [[[[inHumidity]]]]
                color = 0xff9090
                label = "inside"
            [[[[inHumidity_gw]]]]
                color = "orange"
                data_type = inHumidity_gw
                data_binding = "ecowitt_binding"
                label = "upstairs"
            [[[[inHumidity_wh31_1]]]]
                color = "green"
                data_type = inHumidity_wh31_1
                data_binding = "ecowitt_binding"
                label = "downstairs"
            [[[[inHumidity_wh45]]]]
                color = "purple"
                data_type = inHumidity_wh45
                data_binding = "ecowitt_binding"
                label = "WH45"

        [[[daytempin]]]
            top_label_font_size = 10
            data_binding = "ecowitt_binding"
            [[[[inTempEW]]]]
                color = 0x2070d0
                data_type = inTemp_gw
                label = "In T(EW)"
            [[[[inTempEW45]]]]
                color = 0x50ff50
                data_type = inTemp_wh45
                label = "In T(WH45)"
            [[[[inTempEW31a]]]]
                color = "green"
                data_type = inTemp_wh31_1
                label = "T (downstairs)"


        [[[daypm]]]
            data_binding = "ecowitt_binding"
            aggregate_type = avg
            aggregate_interval = 300
            [[[[pm10_wh45]]]]
                label = 'PM10'
            [[[[pm2_5_wh45]]]]
                label = 'PM2.5'

        [[[dayco2]]]
            data_binding = "ecowitt_binding"
            yscale = 400, 900, 50
            [[[[co2]]]]

        [[[dayrain]]]
            # Make sure the y-axis increment is at least 1mm for the rain plot
            yscale = None, None, 1.0
            plot_type = bar
            [[[[rain]]]]
                aggregate_type = sum
                aggregate_interval = 1h
                label = Rain (hourly total)

        [[[dayrainshort]]]
            # Make sure the y-axis increment is at least 1mm for the rain plot
            yscale = None, None, 1.0
            plot_type = bar
            [[[[rain]]]]
                label = Rain (immed)
        
        [[[daywind]]]
            yscale = None, None, 5.0
            [[[[windSpeedSM]]]]
                color = "red"
                data_type = windSpeed
                aggregate_type = avg
                aggregate_interval = 600
                label= 'Wind Spd'
            [[[[windSpeed]]]]
                color = "#ffaaaa"
                aggregate_type = avg
                aggregate_interval = 300
            [[[[windGust]]]]
                color = "darkgreen"
                line_type = none
                marker_type = cross
                marker_size = 3
        
        [[[daywinddir]]]
            color = "green"
            # Hardwire in the y-axis scale for wind direction
            yscale = 0.0, 360.0, 45.0
            line_type = None
            marker_type = cross
            marker_size = 3
            [[[[windDir]]]]
    
        [[[daywindvec]]]
            yscale = -50, 50, 10
            color = "green"
            [[[[windvec]]]]
                plot_type = vector

        #        [[[daymem]]]
        #            yscale = 0.0, None, None
        #            [[[[vmtotoff]]]]
        #                data_type = spare1
        #                color = "red"
        #                label = "VM total"
        #            [[[[vmrssoff]]]]
        #                data_type = spare2
        #                color = "blue"
        #                label = "VM rss"
        #            [[[[vmdataoff]]]]
        #                data_type = spare3
        #                color = "green"
        #                label = "VM data"


    [[week_images]]
        x_label_format = %d
        bottom_label_format = %x %X
        time_length = 604800 # 7 days
        aggregate_type = avg
        aggregate_interval = 1h
        
        [[[weekbarometer]]]
            color = "magenta"
            [[[[barometer]]]]
                color = "red"
            [[[[altimeter]]]]
                data_binding = "ecowitt_binding"
                label = "EW altim"
                data_type = altimeter
        
        [[[weektempdew]]]
            top_label_font_size = 12
            [[[[outTemp]]]]
                color = "red"
                label = "Outside Temp"
            [[[[dewpoint]]]]
                color = "blue"
                label = "Out. Dew Pt"
            #[[[[inTemp]]]]
            #    color = 0x3080ff
            #    label = "Inside Temp"
            [[[[inDewpoint]]]]
                color = 0xff9090
                label = "In. Dew Pt"
            [[[[inTempEW]]]]
                color = 0x2070d0
                data_type = inTemp_gw
                data_binding = "ecowitt_binding"
                label = "T (study)"
            [[[[inTempEW31a]]]]
                color = "green"
                data_type = inTemp_wh31_1
                data_binding = "ecowitt_binding"
                label = "T (downstairs)"
            [[[[inTempEW45]]]]
                color = "purple"
                data_type = inTemp_wh45
                data_binding = "ecowitt_binding"
                label = "T(WH45)"

       

        [[[weekhum]]]
            top_label_font_size = 10
            [[[[outHumidity]]]]
                color = "blue"
                label = "Humidity: outside"
            [[[[inHumidity]]]]
                color = 0xff9090
                label = "inside"
            [[[[inHumidity_gw]]]]
                color = "orange"
                data_type = inHumidity_gw
                data_binding = "ecowitt_binding"
                label = "upstairs"
            [[[[inHumidity_wh31_1]]]]
                color = "green"
                data_type = inHumidity_wh31_1
                data_binding = "ecowitt_binding"
                label = "downstairs"
            [[[[inHumidity_wh45]]]]
                color = "purple"
                data_type = inHumidity_wh45
                data_binding = "ecowitt_binding"
                label = "WH45"


        [[[weekpm]]]
            data_binding = "ecowitt_binding"
            [[[[pm10_wh45max]]]]
                data_type = pm10_wh45
                aggregate_type = max
                label = 'PM10 max'
            [[[[pm2_5_wh45max]]]]
                data_type = pm2_5_wh45
                aggregate_type = max
                label = 'PM2.5 max'
            [[[[pm10_wh45]]]]
                aggregate_type = min
                label = 'PM10 min'
            [[[[pm2_5_wh45]]]]
                aggregate_type = min
                label = 'PM2.5 min'

        [[[weekco2]]]
            data_binding = "ecowitt_binding"
            yscale = 400, 900, 50
            [[[[co2]]]]
                aggregate_type = min
                color= 'blue'
                label = 'CO2 (min)'
            [[[[co2max]]]]
                color ='red'
                data_type = co2
                aggregate_type = max
                label = 'CO2 (max)'

        [[[weekrain]]]
            yscale = None, None, 1.0
            plot_type = bar
            [[[[rain]]]]
                aggregate_type = sum
                aggregate_interval = 1d
                label = Rain (daily total)

        [[[weekrainshort]]]
            yscale = None, None, 1.0
            plot_type = bar
            [[[[rain]]]]
                aggregate_type = sum
                aggregate_interval = 1h
                label = Rain (hourly total)

        [[[weekwind]]]
            [[[[windSpeed]]]]
                color = "red"
            [[[[windGust]]]]
                aggregate_type = max
                color = "darkgreen"
                line_type = none
                marker_type = cross
                marker_size = 3
        
        [[[weekwinddir]]]
            color = "green"
            yscale = 0.0, 360.0, 45.0
            line_type = None
            marker_type = cross
            marker_size = 3
            [[[[wind]]]]
                aggregate_type = vecdir
    
        [[[weekwindvec]]]
            color = "green"
            [[[[windvec]]]]
                plot_type = vector

        [[[weekmaxupdown]]]
            line_gap_fraction = 0.5
            data_binding = "ecowitt_binding"
            [[[[inTemp_gw]]]]
                color = "orange"
                label = "max upstairs"
                aggregate_type = max
            [[[[inTemp_wh31_1]]]]
                color = "green"
                label = "downstairs"
                aggregate_type = max

        [[[weekminupdown]]]
            line_gap_fraction = 0.5
            data_binding = "ecowitt_binding"
            [[[[inTemp_gw]]]]
                color = "orange"
                label = "Min upstairs"
                aggregate_type = min
            [[[[inTemp_wh31_1]]]]
                color = "green"
                label = "downstairs"
                aggregate_type = min

    [[month_images]]
        x_label_format = %d
        bottom_label_format = %x %X
        time_length = 2592000 # 30 days
        aggregate_type = avg
        aggregate_interval = 3h # 10800 # 3 hours
        show_daynight = false
        
        [[[monthbarometer]]]
            color = "magenta"
            [[[[barometer]]]]
                color = "red"
            [[[[altimeter]]]]
                data_binding = "ecowitt_binding"
                label = "EW altim"
                data_type = altimeter
        
        [[[monthtempdew]]]
            top_label_font_size = 10
            [[[[outTemp]]]]
                color = "red"
            [[[[dewpoint]]]]
                color = "blue"
            [[[[inDewpoint]]]]
                color = 0xff9090
            [[[[inTempEW]]]]
                color = 0x2070d0
                data_type = inTemp_gw
                data_binding = "ecowitt_binding"
                label = "T (study)"
            [[[[inTempEW31a]]]]
                color = "green"
                data_type = inTemp_wh31_1
                data_binding = "ecowitt_binding"
                label = "T (downstairs)"
        
      

        [[[monthhumin]]]
            [[[[inHumidity]]]]
                color = "red"
            [[[[outHumidity]]]]
                color = "blue"

        [[[monthpm]]]
            data_binding = "ecowitt_binding"
            [[[[pm10_wh45]]]]
                label = 'PM10'
            [[[[pm2_5_wh45]]]]
                label = 'PM2.5'

        [[[monthpmmin]]]
            data_binding = "ecowitt_binding"
            aggregate_type = min
            [[[[pm10_wh45]]]]
                label = 'Min PM10'
            [[[[pm2_5_wh45]]]]
                label = 'PM2.5'

        [[[monthco2]]]
            yscale = 400, 1000, 50
            data_binding = "ecowitt_binding"
            [[[[co2max]]]]
                color ='pink'
                label = "Max CO2"
                data_type = co2
                aggregate_type = max
            [[[[co2]]]]
                color = 'red'
                label = "CO2"
                aggregate_type = avg

        [[[monthco2min]]]
            data_binding = "ecowitt_binding"
            aggregate_type = min
            [[[[co2]]]]
                color = 'blue'
                label = "Min CO2"

        [[[monthrain]]]
            yscale = None, None, 0.02
            plot_type = bar
            [[[[rain]]]]
                aggregate_type = sum
                aggregate_interval = 1d
                label = Rain (daily total)
        
        [[[monthwind]]]
            color = "red"
            [[[[windSpeed]]]]
            [[[[windGust]]]]
                aggregate_type = max
                color = "darkgreen"
                #line_type = none
                #marker_type = cross
                #marker_size = 3
        
        
        [[[monthwinddir]]]
            yscale = 0.0, 360.0, 45.0
            color = "green"
            line_type = None
            marker_type = box
            marker_size = 2
            [[[[wind]]]]
                aggregate_type = vecdir
    
        #[[[monthwindvec]]]
        #    color = "green"
        #    [[[[windvec]]]]
        #        plot_type = vector

        [[[monthmaxupdown]]]
            line_gap_fraction = 0.5
            data_binding = "ecowitt_binding"
            aggregate_interval = 1d
            [[[[inTemp_gw]]]]
                color = "orange"
                label = "max upstairs"
                aggregate_type = max
            [[[[inTemp_wh31_1]]]]
                color = "green"
                label = "downstairs"
                aggregate_type = max
            [[[[inTemp_gwmin]]]]
                data_type = inTemp_gw
                color = "darkorange"
                label = "Min upstairs"
                aggregate_type = min
            [[[[inTemp_wh31_1min]]]]
                data_type = inTemp_wh31_1
                color = "darkgreen"
                label = "downstairs"
                aggregate_type = min

        [[[monthhilow]]]
            #plot_type = line
			line_gap_fraction = 0.05
            #width = 1
                aggregate_interval = 1d
            [[[[hi]]]]
                data_type = outTemp
                aggregate_type = max
                label = Outside High
                color = "red"
            [[[[hiin]]]]
                data_type = inTemp
                aggregate_type = max
                label = "inside High"
                color = "orange"
            [[[[low]]]]
                data_type = outTemp
                aggregate_type = min
                label = Outside Low
                color = "blue"
            [[[[lowin]]]]
                data_type = inTemp
                aggregate_type = min
                label = "inside Low"
                color = 0xff9090


    [[year_images]]
        x_label_format = %d/%m
        bottom_label_format = %x %X
        time_length = 31536000 # 365 days
        aggregate_type = avg
        aggregate_interval = 1d
        show_daynight = false
        
        [[[yearbarometer]]]
            color = "magenta"
            [[[[barometer]]]]

        [[[yeartempdew]]]
            [[[[outTemp]]]]
                color = "red"
            [[[[dewpoint]]]]
                color = "blue"
            [[[[inDewpoint]]]]
                color = 0xff9090
        

        # This is how to generate a plot of high/low temperatures for the year:
        [[[yearhilow]]]
            [[[[hi]]]]
                data_type = outTemp
                aggregate_type = max
                label = High
                color = "red"
            [[[[low]]]]
                data_type = outTemp
                aggregate_type = min
                label = Low Temperature
                color = "blue"

        [[[yearhum]]]
	    top_label_font_size = 10
            [[[[outHumidity]]]]
                color = "blue"
                label = "Hum.y: outside"
            [[[[inHumidity]]]]
                color = 0xff9090
                label = "inside"
            [[[[inHumidity_gw]]]]
                color = "orange"
                data_type = inHumidity_gw
                data_binding = "ecowitt_binding"
                label = "upstairs"
            [[[[inHumidity_wh31_1]]]]
                color = "green"
                data_type = inHumidity_wh31_1
                data_binding = "ecowitt_binding"
                label = "downstairs"
            [[[[inHumidity_wh45]]]]
                color = "purple"
                data_type = inHumidity_wh45
                data_binding = "ecowitt_binding"
                label = "WH45"

        [[[yearminhum]]]
            aggregate_type = min
	    top_label_font_size = 10
            [[[[outHumidity]]]]
                color = "blue"
                label = "Min Hum.y: outside"
            [[[[inHumidity]]]]
                color = 0xff9090
                label = "inside"
            [[[[inHumidity_gw]]]]
                color = "orange"
                data_type = inHumidity_gw
                data_binding = "ecowitt_binding"
                label = "upstairs"
            [[[[inHumidity_wh31_1]]]]
                color = "green"
                data_type = inHumidity_wh31_1
                data_binding = "ecowitt_binding"
                label = "downstairs"
            [[[[inHumidity_wh45]]]]
                color = "purple"
                data_type = inHumidity_wh45
                data_binding = "ecowitt_binding"
                label = "WH45"


        [[[yearmaxhum]]]
            aggregate_type = max
	    top_label_font_size = 10
            [[[[outHumidity]]]]
                color = "blue"
                label = "Min Hum.y: outside"
            [[[[inHumidity]]]]
                color = 0xff9090
                label = "inside"
            [[[[inHumidity_gw]]]]
                color = "orange"
                data_type = inHumidity_gw
                data_binding = "ecowitt_binding"
                label = "upstairs"
            [[[[inHumidity_wh31_1]]]]
                color = "green"
                data_type = inHumidity_wh31_1
                data_binding = "ecowitt_binding"
                label = "downstairs"
            [[[[inHumidity_wh45]]]]
                color = "purple"
                data_type = inHumidity_wh45
                data_binding = "ecowitt_binding"
                label = "WH45"

        [[[yearpm]]]
            data_binding = "ecowitt_binding"
            [[[[pm10_wh45]]]]
                label = 'PM10'
            [[[[pm2_5_wh45]]]]
                label = 'PM2.5'

        [[[yearpmmin]]]
            data_binding = "ecowitt_binding"
            aggregate_type = min
            [[[[pm10_wh45]]]]
                label = 'Min PM10'
            [[[[pm2_5_wh45]]]]
                label = 'PM2.5'

        [[[yearco2]]]
            yscale = 400, 1000, 50
            data_binding = "ecowitt_binding"
            [[[[co2max]]]]
                color ='pink'
                label = "Max CO2"
                data_type = co2
                aggregate_type = max
            [[[[co2]]]]
                color = 'red'
                label = "CO2"
                aggregate_type = avg

        [[[yearco2min]]]
            data_binding = "ecowitt_binding"
            aggregate_type = min
            [[[[co2]]]]
                color = 'blue'
                label = "Min CO2"


        [[[yearrain]]]
            yscale = None, None, 0.02
            plot_type = bar
            [[[[rain]]]]
                aggregate_type = sum
                aggregate_interval = 1w
                label = Rain (weekly total)

        [[[yearwind]]]
            color = "green"
            [[[[windSpeed]]]]
			    color = "red"
            [[[[windGust]]]]
                aggregate_type = max
        
        [[[yearwinddir]]]
            color = "green"
            yscale = 0.0, 360.0, 45.0
            line_type = None
            marker_type = cross
            marker_size = 3
            [[[[wind]]]]
                aggregate_type = vecdir

        [[[yearmaxupdown]]]
            line_gap_fraction = 0.5
            data_binding = "ecowitt_binding"
            [[[[inTemp_gw]]]]
                color = "orange"
                label = "max upstairs"
                aggregate_type = max
            [[[[inTemp_wh31_1]]]]
                color = "green"
                label = "downstairs"
                aggregate_type = max

        [[[yearminupdown]]]
            line_gap_fraction = 0.5
            data_binding = "ecowitt_binding"
            [[[[inTemp_gw]]]]
                color = "orange"
                label = "Min upstairs"
                aggregate_type = min
            [[[[inTemp_wh31_1]]]]
                color = "green"
                label = "downstairs"
                aggregate_type = min

        [[[yearmem]]]
            yscale = 0.0, None, None
            aggregate_type = last
            [[[[vmtotoff]]]]
                data_type = spare1 
                color = "red"
                label = "VM total"
            [[[[vmrssoff]]]]
                data_type = spare2
                color = "blue"
                label = "VM rss"
            [[[[vmdataoff]]]]
                data_type = spare3
                color = "green"
                label = "VM data"




###############################################################################

[Generators]
        # The list of generators that are to be run:
        generator_list = weewx.cheetahgenerator.CheetahGenerator, weewx.imagegenerator.ImageGenerator, weewx.reportengine.CopyGenerator
